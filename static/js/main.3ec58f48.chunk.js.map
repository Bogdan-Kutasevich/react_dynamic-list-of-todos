{"version":3,"sources":["api.ts","types/Select.ts","components/TodosProvider/TodosProvider.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Select","getUser","userId","TodosContext","createContext","todos","filtredTodos","loadTodosError","getTodosData","FiltredTodosBySearch","FiltredTodosBySelect","TodosProvider","children","useState","setTodos","setFiltredTodos","setLoadTodoError","useCallback","a","data","useEffect","query","lowerCaseQuery","toLowerCase","filter","todo","title","includes","value","all","active","completed","contextValue","Provider","TodoList","React","memo","getDataToModal","isModalLoading","useContext","className","map","id","cn","type","onClick","TodoFilter","setQuery","selectedValue","setSelectedValue","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","userData","currentTodo","loadModal","loadUserDataError","href","email","name","App","setUserData","setCurrentTodo","setIsModalLoading","setLoadUserDataError","selectedTodo","selectedUser","length","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ec58f48.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Select {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import {\n  createContext,\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\nimport { getTodos } from '../../api';\nimport { Select } from '../../types/Select';\nimport { Todo } from '../../types/Todo';\n\ntype ContextType = {\n  todos: Todo[];\n  filtredTodos: Todo[];\n  loadTodosError: boolean;\n  getTodosData: () => void;\n  FiltredTodosBySearch: (query: string) => void;\n  FiltredTodosBySelect: (value: string) => void;\n};\n\nexport const TodosContext = createContext<ContextType>({\n  todos: [],\n  filtredTodos: [],\n  loadTodosError: false,\n  getTodosData: () => {},\n  FiltredTodosBySearch: () => {},\n  FiltredTodosBySelect: () => {},\n});\n\nexport const TodosProvider: React.FC = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filtredTodos, setFiltredTodos] = useState<Todo[]>([]);\n  const [loadTodosError, setLoadTodoError] = useState(false);\n\n  const getTodosData = useCallback(async () => {\n    try {\n      const data = await getTodos();\n\n      setFiltredTodos(data);\n      setTodos(data);\n    } catch (error) {\n      setLoadTodoError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTodosData();\n  }, []);\n\n  const FiltredTodosBySearch = useCallback((query: string) => {\n    const lowerCaseQuery = query.toLowerCase();\n\n    setFiltredTodos(todos.filter(todo => (\n      todo.title.toLowerCase().includes(lowerCaseQuery)\n    )));\n  }, [todos]);\n\n  const FiltredTodosBySelect = useCallback((value: string) => {\n    setFiltredTodos(todos.filter(todo => {\n      switch (value) {\n        case Select.all:\n          return todo;\n        case Select.active:\n          return !todo.completed;\n        case Select.completed:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    }));\n  }, [todos]);\n\n  const contextValue = {\n    todos,\n    filtredTodos,\n    loadTodosError,\n    getTodosData,\n    FiltredTodosBySearch,\n    FiltredTodosBySelect,\n  };\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../TodosProvider';\n\ntype Props = {\n  getDataToModal: (userId: number, currentId: Todo) => void;\n  isModalLoading: boolean;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  getDataToModal,\n  isModalLoading,\n}) => {\n  const { filtredTodos } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      {filtredTodos\n        && (\n          <tbody>\n            {filtredTodos.map(todo => (\n              <tr key={todo.id} data-cy=\"todo\" className=\"\">\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && <i className=\"fas fa-check\" />}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={cn({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => (\n                      getDataToModal(todo.userId, todo)\n\n                    )}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn('far', {\n                        'fa-eye': !isModalLoading,\n                        'fa-eye-slash': isModalLoading,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        )}\n    </table>\n  );\n});\n","import React, {\n  ChangeEvent,\n  useContext,\n  useState,\n} from 'react';\nimport { Select } from '../../types/Select';\nimport { TodosContext } from '../TodosProvider';\n\nexport const TodoFilter: React.FC = React.memo(() => {\n  const [query, setQuery] = useState('');\n  const [selectedValue, setSelectedValue] = useState('all');\n\n  const {\n    FiltredTodosBySearch,\n    FiltredTodosBySelect,\n  } = useContext(TodosContext);\n\n  const changeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    FiltredTodosBySearch(event.target.value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n    FiltredTodosBySearch('');\n  };\n\n  const changeSelectedValue = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedValue(event.target.value);\n    FiltredTodosBySelect(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedValue}\n            onChange={changeSelectedValue}\n          >\n            <option value={Select.all}>All</option>\n            <option value={Select.active}>Active</option>\n            <option value={Select.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={changeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => clearQuery()}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userData: User | null;\n  currentTodo: Todo | null;\n  loadModal: (isLoading: boolean) => void;\n  loadUserDataError: boolean;\n};\n\nexport const TodoModal: React.FC<Props> = React.memo(({\n  userData,\n  currentTodo,\n  loadModal,\n  loadUserDataError,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!(currentTodo) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => loadModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            {!loadUserDataError ? (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${userData?.email}`}>\n                  {userData?.name}\n                </a>\n              </p>\n            )\n              : <div className=\"has-text-danger\">Owner todo not found</div>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useCallback, useContext, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { getUser } from './api';\nimport { TodosContext } from './components/TodosProvider';\n\nexport const App: React.FC = () => {\n  const [userData, setUserData] = useState<User | null>(null);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [loadUserDataError, setLoadUserDataError] = useState(false);\n\n  const { todos, loadTodosError } = useContext(TodosContext);\n\n  const getDataToModal = useCallback(async (userId: number, selectedTodo: Todo) => {\n    try {\n      setIsModalLoading(true);\n      const selectedUser = await getUser(userId);\n\n      setCurrentTodo(selectedTodo);\n      setUserData(selectedUser);\n    } catch (error) {\n      setLoadUserDataError(true);\n      setCurrentTodo(selectedTodo);\n    }\n  }, []);\n\n  const loadModal = (isLoading: boolean) => {\n    setIsModalLoading(isLoading);\n    if (!isLoading) {\n      setCurrentTodo(null);\n      setUserData(null);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            {!loadTodosError && (\n              <div className=\"block\">\n                {todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      getDataToModal={getDataToModal}\n                      isModalLoading={isModalLoading}\n                    />\n                  )}\n              </div>\n            )}\n            {loadTodosError && <div>Todos not found</div>}\n          </div>\n        </div>\n      </div>\n\n      {isModalLoading && (\n        <TodoModal\n          userData={userData}\n          currentTodo={currentTodo}\n          loadModal={loadModal}\n          loadUserDataError={loadUserDataError}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './components/TodosProvider';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}